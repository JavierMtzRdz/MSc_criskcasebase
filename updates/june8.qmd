---
title: "June 8th Meeting Presentation"
format: pdf
editor: visual
---

# Competing Risks Models: Cause-specific hazards and cumulative incidence function Models

## Cause-Specific Hazard (CSH)

Instantaneous rate of occurence of a given event among patients still event-free

Modelled by the Cox-Proportional Hazards model and the Multinomial Casebase model

## Cumulative Incidence Function (CIF)

Probability of occurrence of a given event by time $t$ i.e the expected proportion of patients with a certain event over the course of time

Modelled by the direct Binomial and Fine-Gray model

# What do we want to infer in a competing risks model?

A complete competing risks analysis involves inferring both the cause-specific hazard ratio as well as the cumulative incidence functions

# To show from a competing risks model

-   It can perform variable selection as accurately as a cox proportional hazards model

-   It can estimate CIF curves as accurate as a direct binomial or Fine-Gray approach and relatively better than the Cox-proportional hazards non-parametric estimate

# Simulation Settings

-   Data generated from two proportional hazards models:

-   Simulation Settings

    The cause-specific hazards of the outcome of interest and the competing risk follow proportional hazards models, specifically:

    $$\alpha_{01} = 0.8t \ \text{exp}(\beta_{01} Z)$$

    $$\alpha_{02} = 0.3t \ \text{exp}(\beta_{02} Z)$$

-   where both cause-specific hazards have the form of a Weibull distribution and a common set of covariates.

N = 400, p = 20

Three correlation cases: IID, AR(1) correlation ($\rho = 0.5$) and Block Correlation

Block correlation - 4 blocks, correlations of 0.5, 0.35, 0.05 and 0.32

Three cases of sparsity: (1) Sparse: Predictors 1 and 10 (2) Midsparse: Predictors 1, 5, 10 and 15 and Non-sparse (3) predictors 1, 2, 3, 5, 8, 10, 13, 15, 18, 20

Betas for cause of interest: 0.5, Betas for competing risk: 0.2

Approximately \~ 25 $\%$ censorings, 55 $\%$ of the cause of interest and $20%$ for the competing cause

```{r , echo = FALSE, message = FALSE, warning = FALSE, out.width = '60%'}
library(survsim)
library(dplyr)
library(cmprsk)
n <- 400
p <- 20
beta <- list(c(0.5, 0.5, 0.5, 0, 0.5, 0, 0, 0.5, 0, 0.5, 0, 0, 0.5, 0, 0.5, 0, 0, 0.5, 0, 0.5), 
             c(0.2, 0.2, 0.2, 0, 0.2, 0, 0, 0.2, 0, 0.2, 0, 0, 0.2, 0, 0.2, 0, 0, 0.2, 0, 0.2))
dist.ev <- c("weibull", "weibull")
anc.ev <- c(0.8, 0.3)
beta0.ev <- c(0.1, 0.1)
x <- rep(list(c("normal", 0, 1)), p)

# Generating survival data 
sim.data <- crisk.sim(foltime = 2, dist.ev = dist.ev, 
                      anc.ev = anc.ev, beta0.ev = beta0.ev, beta0.cens = 0.05, anc.cens = 4, nsit = 2, 
                      beta = beta, x = x, n = n)

# fix status variable
sim.data$cause <- with(sim.data, ifelse(is.na(sim.data$cause), 0, sim.data$cause))
colnames(sim.data)[grepl("x", colnames(sim.data))]   <- paste0("X", seq_len(p))

# Format data
sim.data <- sim.data %>%
  dplyr::select(-nid, -status, -start, -stop, -z) %>%
  rename(status = cause)
# True cumulative incidence 
cif <- cuminc(ftime = sim.data$time, fstatus = sim.data$status)
plot(cif)

```

# Variable Selection Results: N \> p IID and Sparse case

```{r , echo = FALSE, message = FALSE, warning = FALSE}
# Libraries 
library(readr)
library(purrr)
library(tidyverse)
library(data.table)

removewords <- function(str, stopwords) {
  x <- unlist(strsplit(str, " "))
  paste(x[!x %in% stopwords], collapse = " ")
}


# Read in all the output read files 
path <- "~/Desktop/ResearchMasters/MSc_criskcasebase/Simulations/varselection_ngp_lowcens/results400_iid_sparse"
copynum.files <- dir(path, pattern = "*iid_sparse.csv$")

# Nested data frame with file names 
iid_sparse_dat <- tibble(filename = copynum.files) %>%
  mutate(file_contents = map(filename, ~ read_csv(file.path(path, .)))
  )

# Unnest nested dataframe
iid_sparse_dat <- unnest(iid_sparse_dat, cols = c(file_contents))

iid_sparse_dat <- iid_sparse_dat %>%
  select(-filename) %>%
  rename("Model" = ...1) %>%
  mutate(cor_setting = rep("IID", nrow(iid_sparse_dat))) %>%
  mutate(sparse_setting = rep( "Sparse", nrow(iid_sparse_dat))) %>%
  mutate(Model = str_remove_all(Model, "lambda"))

iid_sparse_stats <- iid_sparse_dat %>%
  group_by(Model) %>%
  summarise(mean_sp = mean(Specificity), mean_se = mean(Sensitivity), 
            median_sp = median(Specificity), median_se = median(Sensitivity),
            se_sp = sd(Specificity), se_se = sd(Sensitivity), iqr_sp = IQR(Specificity), iqr_se = IQR(Sensitivity), perc_se_sp = sum(Sensitivity == 0 | Specificity == 0)/n(), MCC_mean = mean(MCC, na.rm = TRUE))


iid_sparse_stats <- iid_sparse_stats %>%
  mutate_if(is.numeric, round, digits = 3) %>%
  mutate(mean_sp = paste0(mean_sp," ", "(", se_sp, ")")) %>%
  mutate(mean_se = paste0(mean_se, " ","(", se_se, ")")) %>%
  mutate(median_sp = paste0(median_sp," ", "(", iqr_sp, ")")) %>%
  mutate(median_se = paste0(median_se," ", "(", iqr_se, ")")) %>%
  select(-se_sp, -se_se, -iqr_sp, -iqr_se)

knitr::kable(iid_sparse_stats, col.names = c("Model", "Mean Sp", "Mean Se", "Median Sp", "Median Se", "Miss Rate", "MCC"))
```

# Variable Selection Results: N \> p IID and Mid-sparse case

```{r , echo = FALSE, message = FALSE, warning = FALSE}

# Read in all the output read files 
path <- "~/Desktop/ResearchMasters/MSc_criskcasebase/Simulations/varselection_ngp_lowcens/results400_iid_midsparse"
copynum.files <- dir(path, pattern = "*iid_midsparse.csv$")

# Nested data frame with file names 
iid_sparse_dat <- tibble(filename = copynum.files) %>%
  mutate(file_contents = map(filename, ~ read_csv(file.path(path, .)))
  )

# Unnest nested dataframe
iid_sparse_dat <- unnest(iid_sparse_dat, cols = c(file_contents))

iid_sparse_dat <- iid_sparse_dat %>%
  select(-filename) %>%
  rename("Model" = ...1) %>%
  mutate(cor_setting = rep("IID", nrow(iid_sparse_dat))) %>%
  mutate(sparse_setting = rep( "Sparse", nrow(iid_sparse_dat))) %>%
  mutate(Model = str_remove_all(Model, "lambda"))

iid_sparse_stats <- iid_sparse_dat %>%
  group_by(Model) %>%
  summarise(mean_sp = mean(Specificity), mean_se = mean(Sensitivity), 
            median_sp = median(Specificity), median_se = median(Sensitivity),
            se_sp = sd(Specificity), se_se = sd(Sensitivity), iqr_sp = IQR(Specificity), iqr_se = IQR(Sensitivity), perc_se_sp = sum(Sensitivity == 0 | Specificity == 0)/n(), MCC_mean = mean(MCC, na.rm = TRUE))


iid_sparse_stats <- iid_sparse_stats %>%
  mutate_if(is.numeric, round, digits = 3) %>%
  mutate(mean_sp = paste0(mean_sp," ", "(", se_sp, ")")) %>%
  mutate(mean_se = paste0(mean_se, " ","(", se_se, ")")) %>%
  mutate(median_sp = paste0(median_sp," ", "(", iqr_sp, ")")) %>%
  mutate(median_se = paste0(median_se," ", "(", iqr_se, ")")) %>%
  select(-se_sp, -se_se, -iqr_sp, -iqr_se)

knitr::kable(iid_sparse_stats, col.names = c("Model", "Mean Sp", "Mean Se", "Median Sp", "Median Se", "Miss Rate", "MCC"))
```

# Variable Selection Results: N \> p IID and Non-sparse case

```{r , echo = FALSE, message = FALSE, warning = FALSE}
# Read in all the output read files 
path <- "~/Desktop/ResearchMasters/MSc_criskcasebase/Simulations/varselection_ngp_lowcens/results400_iid_nonsparse"
copynum.files <- dir(path, pattern = "*iid_nonsparse.csv$")

# Nested data frame with file names 
iid_sparse_dat <- tibble(filename = copynum.files) %>%
  mutate(file_contents = map(filename, ~ read_csv(file.path(path, .)))
  )

# Unnest nested dataframe
iid_sparse_dat <- unnest(iid_sparse_dat, cols = c(file_contents))

iid_sparse_dat <- iid_sparse_dat %>%
  select(-filename) %>%
  rename("Model" = ...1) %>%
  mutate(cor_setting = rep("IID", nrow(iid_sparse_dat))) %>%
  mutate(sparse_setting = rep( "Sparse", nrow(iid_sparse_dat))) %>%
  mutate(Model = str_remove_all(Model, "lambda"))

iid_sparse_stats <- iid_sparse_dat %>%
  group_by(Model) %>%
  summarise(mean_sp = mean(Specificity), mean_se = mean(Sensitivity), 
            median_sp = median(Specificity), median_se = median(Sensitivity),
            se_sp = sd(Specificity), se_se = sd(Sensitivity), iqr_sp = IQR(Specificity), iqr_se = IQR(Sensitivity), perc_se_sp = sum(Sensitivity == 0 | Specificity == 0)/n(), MCC_mean = mean(MCC, na.rm = TRUE))


iid_sparse_stats <- iid_sparse_stats %>%
  mutate_if(is.numeric, round, digits = 3) %>%
  mutate(mean_sp = paste0(mean_sp," ", "(", se_sp, ")")) %>%
  mutate(mean_se = paste0(mean_se, " ","(", se_se, ")")) %>%
  mutate(median_sp = paste0(median_sp," ", "(", iqr_sp, ")")) %>%
  mutate(median_se = paste0(median_se," ", "(", iqr_se, ")")) %>%
  select(-se_sp, -se_se, -iqr_sp, -iqr_se)

knitr::kable(iid_sparse_stats, col.names = c("Model", "Mean Sp", "Mean Se", "Median Sp", "Median Se", "Miss Rate", "MCC"))
```

# Variable Selection Results: N \> p AR(1) correlation and Sparse case

```{r , echo = FALSE, message = FALSE, warning = FALSE}
# Read in all the output read files 
path <- "~/Desktop/ResearchMasters/MSc_criskcasebase/Simulations/varselection_ngp_lowcens/results400_cor_sparse"
copynum.files <- dir(path, pattern = "*cor_sparse.csv$")

# Nested data frame with file names 
iid_sparse_dat <- tibble(filename = copynum.files) %>%
  mutate(file_contents = map(filename, ~ read_csv(file.path(path, .)))
  )

# Unnest nested dataframe
iid_sparse_dat <- unnest(iid_sparse_dat, cols = c(file_contents))

iid_sparse_dat <- iid_sparse_dat %>%
  select(-filename) %>%
  rename("Model" = ...1) %>%
  mutate(cor_setting = rep("IID", nrow(iid_sparse_dat))) %>%
  mutate(sparse_setting = rep( "Sparse", nrow(iid_sparse_dat))) %>%
  mutate(Model = str_remove_all(Model, "lambda"))

iid_sparse_stats <- iid_sparse_dat %>%
  group_by(Model) %>%
  summarise(mean_sp = mean(Specificity), mean_se = mean(Sensitivity), 
            median_sp = median(Specificity), median_se = median(Sensitivity),
            se_sp = sd(Specificity), se_se = sd(Sensitivity), iqr_sp = IQR(Specificity), iqr_se = IQR(Sensitivity), perc_se_sp = sum(Sensitivity == 0 | Specificity == 0)/n(), MCC_mean = mean(MCC, na.rm = TRUE))


iid_sparse_stats <- iid_sparse_stats %>%
  mutate_if(is.numeric, round, digits = 3) %>%
  mutate(mean_sp = paste0(mean_sp," ", "(", se_sp, ")")) %>%
  mutate(mean_se = paste0(mean_se, " ","(", se_se, ")")) %>%
  mutate(median_sp = paste0(median_sp," ", "(", iqr_sp, ")")) %>%
  mutate(median_se = paste0(median_se," ", "(", iqr_se, ")")) %>%
  select(-se_sp, -se_se, -iqr_sp, -iqr_se)

knitr::kable(iid_sparse_stats, col.names = c("Model", "Mean Sp", "Mean Se", "Median Sp", "Median Se", "Miss Rate", "MCC"))

```

# Variable Selection Results: N \> p AR(1) correlation and Mid-sparse case

```{r , echo = FALSE, message = FALSE, warning = FALSE}
# Read in all the output read files 
path <- "~/Desktop/ResearchMasters/MSc_criskcasebase/Simulations/varselection_ngp_lowcens/results400_cor_midsparse"
copynum.files <- dir(path, pattern = "*cor_midsparse.csv$")

# Nested data frame with file names 
iid_sparse_dat <- tibble(filename = copynum.files) %>%
  mutate(file_contents = map(filename, ~ read_csv(file.path(path, .)))
  )

# Unnest nested dataframe
iid_sparse_dat <- unnest(iid_sparse_dat, cols = c(file_contents))

iid_sparse_dat <- iid_sparse_dat %>%
  select(-filename) %>%
  rename("Model" = ...1) %>%
  mutate(cor_setting = rep("IID", nrow(iid_sparse_dat))) %>%
  mutate(sparse_setting = rep( "Sparse", nrow(iid_sparse_dat))) %>%
  mutate(Model = str_remove_all(Model, "lambda"))

iid_sparse_stats <- iid_sparse_dat %>%
  group_by(Model) %>%
  summarise(mean_sp = mean(Specificity), mean_se = mean(Sensitivity), 
            median_sp = median(Specificity), median_se = median(Sensitivity),
            se_sp = sd(Specificity), se_se = sd(Sensitivity), iqr_sp = IQR(Specificity), iqr_se = IQR(Sensitivity), perc_se_sp = sum(Sensitivity == 0 | Specificity == 0)/n(), MCC_mean = mean(MCC, na.rm = TRUE))


iid_sparse_stats <- iid_sparse_stats %>%
  mutate_if(is.numeric, round, digits = 3) %>%
  mutate(mean_sp = paste0(mean_sp," ", "(", se_sp, ")")) %>%
  mutate(mean_se = paste0(mean_se, " ","(", se_se, ")")) %>%
  mutate(median_sp = paste0(median_sp," ", "(", iqr_sp, ")")) %>%
  mutate(median_se = paste0(median_se," ", "(", iqr_se, ")")) %>%
  select(-se_sp, -se_se, -iqr_sp, -iqr_se)

knitr::kable(iid_sparse_stats, col.names = c("Model", "Mean Sp", "Mean Se", "Median Sp", "Median Se", "Miss Rate", "MCC"))
```

# Variable Selection Results: N \> p AR(1) correlation and Non-sparse case

```{r, echo = FALSE, message = FALSE, warning = FALSE}

# Read in all the output read files 
path <- "~/Desktop/ResearchMasters/MSc_criskcasebase/Simulations/varselection_ngp_lowcens/results400_cor_nonsparse"
copynum.files <- dir(path, pattern = "*cor_nonsparse.csv$")

# Nested data frame with file names 
iid_sparse_dat <- tibble(filename = copynum.files) %>%
  mutate(file_contents = map(filename, ~ read_csv(file.path(path, .)))
  )

# Unnest nested dataframe
iid_sparse_dat <- unnest(iid_sparse_dat, cols = c(file_contents))

iid_sparse_dat <- iid_sparse_dat %>%
  select(-filename) %>%
  rename("Model" = ...1) %>%
  mutate(cor_setting = rep("IID", nrow(iid_sparse_dat))) %>%
  mutate(sparse_setting = rep( "Sparse", nrow(iid_sparse_dat))) %>%
  mutate(Model = str_remove_all(Model, "lambda"))

iid_sparse_stats <- iid_sparse_dat %>%
  group_by(Model) %>%
  summarise(mean_sp = mean(Specificity), mean_se = mean(Sensitivity), 
            median_sp = median(Specificity), median_se = median(Sensitivity),
            se_sp = sd(Specificity), se_se = sd(Sensitivity), iqr_sp = IQR(Specificity), iqr_se = IQR(Sensitivity), perc_se_sp = sum(Sensitivity == 0 | Specificity == 0)/n(), MCC_mean = mean(MCC, na.rm = TRUE))


iid_sparse_stats <- iid_sparse_stats %>%
  mutate_if(is.numeric, round, digits = 3) %>%
  mutate(mean_sp = paste0(mean_sp," ", "(", se_sp, ")")) %>%
  mutate(mean_se = paste0(mean_se, " ","(", se_se, ")")) %>%
  mutate(median_sp = paste0(median_sp," ", "(", iqr_sp, ")")) %>%
  mutate(median_se = paste0(median_se," ", "(", iqr_se, ")")) %>%
  select(-se_sp, -se_se, -iqr_sp, -iqr_se)

knitr::kable(iid_sparse_stats, col.names = c("Model", "Mean Sp", "Mean Se", "Median Sp", "Median Se", "Miss Rate", "MCC"))
```

# Variable Selection Results: N \> p Block correlation and Sparse case

```{r , echo = FALSE, message = FALSE, warning = FALSE}
# Read in all the output read files 
path <- "~/Desktop/cedar_simulations/results400_block_sparse"
copynum.files <- dir(path, pattern = "*block_sparse.csv$")

# Nested data frame with file names 
iid_sparse_dat <- tibble(filename = copynum.files) %>%
  mutate(file_contents = map(filename, ~ read_csv(file.path(path, .)))
  )

# Unnest nested dataframe
iid_sparse_dat <- unnest(iid_sparse_dat, cols = c(file_contents))

iid_sparse_dat <- iid_sparse_dat %>%
  select(-filename) %>%
  rename("Model" = ...1) %>%
  mutate(cor_setting = rep("IID", nrow(iid_sparse_dat))) %>%
  mutate(sparse_setting = rep( "Sparse", nrow(iid_sparse_dat))) %>%
  mutate(Model = str_remove_all(Model, "lambda"))

iid_sparse_stats <- iid_sparse_dat %>%
  group_by(Model) %>%
  summarise(mean_sp = mean(Specificity), mean_se = mean(Sensitivity), 
            median_sp = median(Specificity), median_se = median(Sensitivity),
            se_sp = sd(Specificity), se_se = sd(Sensitivity), iqr_sp = IQR(Specificity), iqr_se = IQR(Sensitivity), perc_se_sp = sum(Sensitivity == 0 | Specificity == 0)/n(), MCC_mean = mean(MCC, na.rm = TRUE))


iid_sparse_stats <- iid_sparse_stats %>%
  mutate_if(is.numeric, round, digits = 3) %>%
  mutate(mean_sp = paste0(mean_sp," ", "(", se_sp, ")")) %>%
  mutate(mean_se = paste0(mean_se, " ","(", se_se, ")")) %>%
  mutate(median_sp = paste0(median_sp," ", "(", iqr_sp, ")")) %>%
  mutate(median_se = paste0(median_se," ", "(", iqr_se, ")")) %>%
  select(-se_sp, -se_se, -iqr_sp, -iqr_se)

knitr::kable(iid_sparse_stats, col.names = c("Model", "Mean Sp", "Mean Se", "Median Sp", "Median Se", "Miss Rate", "MCC"))
```

# Variable Selection Results: N \> p Block correlation and Mid-sparse case

```{r , echo = FALSE, message = FALSE, warning = FALSE}
# Read in all the output read files 
path <- "~/Desktop/cedar_simulations/results400_block_midsparse"
copynum.files <- dir(path, pattern = "*block_midsparse.csv$")

# Nested data frame with file names 
iid_sparse_dat <- tibble(filename = copynum.files) %>%
  mutate(file_contents = map(filename, ~ read_csv(file.path(path, .)))
  )

# Unnest nested dataframe
iid_sparse_dat <- unnest(iid_sparse_dat, cols = c(file_contents))

iid_sparse_dat <- iid_sparse_dat %>%
  select(-filename) %>%
  rename("Model" = ...1) %>%
  mutate(cor_setting = rep("IID", nrow(iid_sparse_dat))) %>%
  mutate(sparse_setting = rep( "Sparse", nrow(iid_sparse_dat))) %>%
  mutate(Model = str_remove_all(Model, "lambda"))

iid_sparse_stats <- iid_sparse_dat %>%
  group_by(Model) %>%
  summarise(mean_sp = mean(Specificity), mean_se = mean(Sensitivity), 
            median_sp = median(Specificity), median_se = median(Sensitivity),
            se_sp = sd(Specificity), se_se = sd(Sensitivity), iqr_sp = IQR(Specificity), iqr_se = IQR(Sensitivity), perc_se_sp = sum(Sensitivity == 0 | Specificity == 0)/n(), MCC_mean = mean(MCC, na.rm = TRUE))


iid_sparse_stats <- iid_sparse_stats %>%
  mutate_if(is.numeric, round, digits = 3) %>%
  mutate(mean_sp = paste0(mean_sp," ", "(", se_sp, ")")) %>%
  mutate(mean_se = paste0(mean_se, " ","(", se_se, ")")) %>%
  mutate(median_sp = paste0(median_sp," ", "(", iqr_sp, ")")) %>%
  mutate(median_se = paste0(median_se," ", "(", iqr_se, ")")) %>%
  select(-se_sp, -se_se, -iqr_sp, -iqr_se)

knitr::kable(iid_sparse_stats, col.names = c("Model", "Mean Sp", "Mean Se", "Median Sp", "Median Se", "Miss Rate", "MCC"))
```

# Variable Selection Results: N \> p Block correlation and Non-sparse case

```{r , echo = FALSE, message = FALSE, warning = FALSE}

# Read in all the output read files 
path <- "~/Desktop/cedar_simulations/results400_block_nonsparse"
copynum.files <- dir(path, pattern = "*block_nonsparse.csv$")

# Nested data frame with file names 
iid_sparse_dat <- tibble(filename = copynum.files) %>%
  mutate(file_contents = map(filename, ~ read_csv(file.path(path, .)))
  )

# Unnest nested dataframe
iid_sparse_dat <- unnest(iid_sparse_dat, cols = c(file_contents))

iid_sparse_dat <- iid_sparse_dat %>%
  select(-filename) %>%
  rename("Model" = ...1) %>%
  mutate(cor_setting = rep("IID", nrow(iid_sparse_dat))) %>%
  mutate(sparse_setting = rep( "Sparse", nrow(iid_sparse_dat))) %>%
  mutate(Model = str_remove_all(Model, "lambda"))

iid_sparse_stats <- iid_sparse_dat %>%
  group_by(Model) %>%
  summarise(mean_sp = mean(Specificity), mean_se = mean(Sensitivity), 
            median_sp = median(Specificity), median_se = median(Sensitivity),
            se_sp = sd(Specificity), se_se = sd(Sensitivity), iqr_sp = IQR(Specificity), iqr_se = IQR(Sensitivity), perc_se_sp = sum(Sensitivity == 0 | Specificity == 0)/n(), MCC_mean = mean(MCC, na.rm = TRUE))


iid_sparse_stats <- iid_sparse_stats %>%
  mutate_if(is.numeric, round, digits = 3) %>%
  mutate(mean_sp = paste0(mean_sp," ", "(", se_sp, ")")) %>%
  mutate(mean_se = paste0(mean_se, " ","(", se_se, ")")) %>%
  mutate(median_sp = paste0(median_sp," ", "(", iqr_sp, ")")) %>%
  mutate(median_se = paste0(median_se," ", "(", iqr_se, ")")) %>%
  select(-se_sp, -se_se, -iqr_sp, -iqr_se)

knitr::kable(iid_sparse_stats, col.names = c("Model", "Mean Sp", "Mean Se", "Median Sp", "Median Se", "Miss Rate", "MCC"))
```

# Next Steps

1.  Focus on Brier score simulation results and p \> N variable selection results - generate by next week

2.  Apply method on real dataset?: Microarray data for non-Muscle Invasive Bladder Carcinoma
